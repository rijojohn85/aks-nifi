apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi
  namespace: nifi
spec:
  # must match your headless service created earlier
  serviceName: "nifi"
  replicas: 2
  selector:
    matchLabels:
      app: nifi
  template:
    metadata:
      labels:
        app: nifi
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      dnsPolicy: ClusterFirst
      containers:
        - name: nifi
          image: apache/nifi:2.5.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8443   # UI HTTPS
            - containerPort: 11443  # cluster comms
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NIFI_CLUSTER_IS_NODE
              value: "true"
            - name: NIFI_CLUSTER_ADDRESS
              value: "$(POD_NAME).nifi.$(POD_NAMESPACE).svc.cluster.local"
            - name: NIFI_CLUSTER_NODE_PROTOCOL_PORT
              value: "11443"
            - name: NIFI_CLUSTER_NODE_PROTOCOL_MAX_THREADS
              value: "100"
            - name: NIFI_ZK_CONNECT_STRING
              value: "zookeeper:2181"
            - name: NIFI_ELECTION_MAX_WAIT
              value: "1 mins"

            # Web / HTTPS
            - name: NIFI_WEB_HTTPS_PORT
              value: "8443"
            - name: NIFI_WEB_HTTPS_HOST
              value: "$(POD_NAME).nifi.$(POD_NAMESPACE).svc.cluster.local"

            # Security / TLS
            - name: AUTH
              value: "tls"
            - name: NIFI_SECURITY_NEED_CLIENT_AUTH
              value: "true"
            - name: KEYSTORE_PATH
              value: "/opt/nifi/nifi-current/conf/keystore.jks"
            - name: KEYSTORE_TYPE
              value: "JKS"
            - name: KEYSTORE_PASSWORD
              value: "changeit"
            - name: NIFI_SECURITY_KEY_PASSWD
              value: "changeit"
            - name: TRUSTSTORE_PATH
              value: "/opt/nifi/nifi-current/conf/truststore.jks"
            - name: TRUSTSTORE_TYPE
              value: "JKS"
            - name: TRUSTSTORE_PASSWORD
              value: "changeit"

            # Flow settings
            - name: NIFI_SENSITIVE_PROPS_KEY
              value: "nifi-minikube-key"
            - name: NIFI_CLUSTER_FLOW_ELECTION_MAX_WAIT
              value: "1 mins"

            # User / login
            - name: NIFI_SECURITY_USER_LOGIN_IDENTITY_PROVIDER
              value: "single-user-provider"
            - name: NIFI_SECURITY_USER_AUTHORIZER
              value: "single-user-authorizer"
            - name: SINGLE_USER_CREDENTIALS_USERNAME
              value: "admin"
            - name: SINGLE_USER_CREDENTIALS_PASSWORD
              value: "nifi-secure-password-123"

            # SSL algorithm
            - name: NIFI_SSL_ALGORITHM
              value: "TLSv1.2"

          resources:
            requests: { memory: "4Gi", cpu: "2" }
            limits:   { memory: "16Gi", cpu: "4" }

          volumeMounts:
            # JKS files from Secret
            - name: nifi-tls
              mountPath: /opt/nifi/nifi-current/conf/keystore.jks
              subPath: keystore.jks
            - name: nifi-tls
              mountPath: /opt/nifi/nifi-current/conf/truststore.jks
              subPath: truststore.jks

            ##state-management.xml (with the ZK Connect String)
            #- name: state-mgmt
            #  mountPath: /opt/nifi/nifi-current/conf/state-management.xml
            #  subPath: state-management.xml

            # Persistent repos (single PVC used for all repos)
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/content_repository
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/flowfile_repository
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/provenance_repository
            - name: nifi-data
              mountPath: /opt/nifi/nifi-current/state

          # readinessProbe:
          #   httpGet: { scheme: HTTPS, path: /nifi/, port: 8443 }
          #   initialDelaySeconds: 30
          #   periodSeconds: 10
          # livenessProbe:
          #   httpGet: { scheme: HTTPS, path: /nifi/, port: 8443 }
          #   initialDelaySeconds: 60
          #   periodSeconds: 20

      volumes:
        - name: nifi-tls
          secret:
            secretName: nifi-tls
        - name: state-mgmt
          configMap:
            name: nifi-state-management

  volumeClaimTemplates:
    - metadata:
        name: nifi-data
      spec:
        accessModes: ["ReadWriteOnce"]
        # storageClassName: managed-csi-premium   # uncomment for Premium disks
        resources:
          requests:
            storage: 20Gi

